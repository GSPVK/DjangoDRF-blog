version: '3.9'

services:
  web:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    volumes:
      - static_data:/app/staticfiles/
      - media_data:/app/media/
    entrypoint:
      - /bin/sh
      - /app/docker/scripts/server-entrypoint.sh
    restart: unless-stopped
    expose:
      - 8000
    env_file:
      - .env
    environment:
      - VIRTUAL_HOST=<your_domain.com>
      - VIRTUAL_PORT=<same_as_exposed_port>
      - LETSENCRYPT_HOST=<your_domain.com>
      - LETSENCRYPT_EMAIL=<your_email>
    depends_on:
      - redis
      - db

  nginx-proxy:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: nginx-proxy
    restart: always
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - static_data:/var/www/html/static/
      - media_data:/var/www/html/media/
      - ./docker/nginx/custom_50x.html:/usr/share/nginx/html/errors/50x.html:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    depends_on:
      - web

  acme-companion:
    image: nginxproxy/acme-companion:2.4.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    depends_on:
      - nginx-proxy

  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${SQL_DB}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}

  redis:
    image: redis:7.2.5-alpine
    env_file:
      - .env
    command: redis-server --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    restart: unless-stopped
    ports:
      - "63790:${REDIS_PORT}"

  rabbit:
    image: rabbitmq:3.13-management-alpine
    hostname: rabbit
    restart: always
    volumes:
      - rabbit_data:/var/lib/rabbitmq/
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - "56720:${RABBITMQ_NODE_PORT}"
      - "15682:${RABBITMQ_MANAGEMENT_PORT}"

  celery-worker:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    command: poetry run celery -A config worker --loglevel=info
    volumes:
      - static_data:/app/staticfiles/
      - media_data:/app/media/
    env_file:
      - .env
    depends_on:
      - rabbit
      - db

  flower:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    command: poetry run celery -A config flower
      --address=0.0.0.0
      --port=${FLOWER_PORT}
      --basic_auth=${FLOWER_USER}:${FLOWER_PASSWORD}
      --broker_api=${CELERY_BROKER_URL}/api
    volumes:
      - static_data:/app/staticfiles/
      - media_data:/app/media/
    env_file:
      - .env
    ports:
      - "55550:${FLOWER_PORT}"
    depends_on:
      - celery-worker


volumes:
  static_data:
  media_data:
  postgres_data:
  rabbit_data:
  certs:
  acme:
  html:
  vhost: